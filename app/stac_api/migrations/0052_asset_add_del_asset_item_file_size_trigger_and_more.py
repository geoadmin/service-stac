# Generated by Django 5.0.8 on 2024-10-16 07:45

import pgtrigger.compiler
import pgtrigger.migrations

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("stac_api", "0051_asset_file_size_assetupload_file_size_and_more"),
    ]

    operations = [
        pgtrigger.migrations.AddTrigger(
            model_name="asset",
            trigger=pgtrigger.compiler.Trigger(
                name="add_del_asset_item_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    declare=
                    "DECLARE asset_instance stac_api_asset%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        asset_instance = COALESCE(NEW, OLD);\n\n        -- Update related item file_size variables\n        UPDATE stac_api_item SET\n            total_data_size = total_data_size + COALESCE(NEW.file_size, 0) - COALESCE(OLD.file_size, 0)\n        WHERE id = asset_instance.item_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            asset_instance.item_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'item.id=% total_data_size updated, due to asset.name=% updates.',\n            asset_instance.item_id, asset_instance.name;\n\n        RETURN asset_instance;\n        ",
                    hash="bf122c502135678607e7668e061f1ff10f645754",
                    operation="INSERT OR DELETE",
                    pgid="pgtrigger_add_del_asset_item_file_size_trigger_b2d65",
                    table="stac_api_asset",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="asset",
            trigger=pgtrigger.compiler.Trigger(
                name="update_asset_item_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.file_size IS DISTINCT FROM NEW.file_size)",
                    declare=
                    "DECLARE asset_instance stac_api_asset%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        asset_instance = COALESCE(NEW, OLD);\n\n        -- Update related item file_size variables\n        UPDATE stac_api_item SET\n            total_data_size = total_data_size + COALESCE(NEW.file_size, 0) - COALESCE(OLD.file_size, 0)\n        WHERE id = asset_instance.item_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            asset_instance.item_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'item.id=% total_data_size updated, due to asset.name=% updates.',\n            asset_instance.item_id, asset_instance.name;\n\n        RETURN asset_instance;\n        ",
                    hash="2af100ac033f6d32301fcc898895cb700de1ac65",
                    operation="UPDATE",
                    pgid="pgtrigger_update_asset_item_file_size_trigger_316e8",
                    table="stac_api_asset",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="collectionasset",
            trigger=pgtrigger.compiler.Trigger(
                name="add_del_col_asset_col_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    declare=
                    "DECLARE asset_instance stac_api_collectionasset%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        asset_instance = COALESCE(NEW, OLD);\n\n        -- Update related collection file_size variables\n        UPDATE stac_api_collection SET\n            total_data_size = total_data_size + COALESCE(NEW.file_size, 0) - COALESCE(OLD.file_size, 0)\n        WHERE id = asset_instance.collection_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            asset_instance.collection_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'collection.id=% total_data_size updated, due to item.name=% updates.',\n            asset_instance.collection_id, asset_instance.name;\n\n        RETURN asset_instance;\n        ",
                    hash="dbb3f2433414d4c92991f1ca7b3270aa92ae6619",
                    operation="INSERT OR DELETE",
                    pgid="pgtrigger_add_del_col_asset_col_file_size_trigger_fb765",
                    table="stac_api_collectionasset",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="collectionasset",
            trigger=pgtrigger.compiler.Trigger(
                name="update_col_asset_col_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    declare=
                    "DECLARE asset_instance stac_api_collectionasset%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        asset_instance = COALESCE(NEW, OLD);\n\n        -- Update related collection file_size variables\n        UPDATE stac_api_collection SET\n            total_data_size = total_data_size + COALESCE(NEW.file_size, 0) - COALESCE(OLD.file_size, 0)\n        WHERE id = asset_instance.collection_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            asset_instance.collection_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'collection.id=% total_data_size updated, due to item.name=% updates.',\n            asset_instance.collection_id, asset_instance.name;\n\n        RETURN asset_instance;\n        ",
                    hash="bb4d83e614cd8c5236def8bd1dddedbc8e8ecd81",
                    operation="UPDATE",
                    pgid="pgtrigger_update_col_asset_col_file_size_trigger_1d5be",
                    table="stac_api_collectionasset",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="item",
            trigger=pgtrigger.compiler.Trigger(
                name="add_del_item_collection_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    declare=
                    "DECLARE item_instance stac_api_item%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        item_instance = COALESCE(NEW, OLD);\n\n        -- Update related collection file_size variables\n        UPDATE stac_api_collection SET\n            total_data_size = total_data_size + COALESCE(NEW.total_data_size, 0) - COALESCE(OLD.total_data_size, 0)\n        WHERE id = item_instance.collection_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            item_instance.collection_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'collection.id=% total_data_size updated, due to item.name=% updates.',\n            item_instance.collection_id, item_instance.name;\n\n        RETURN item_instance;\n        ",
                    hash="b068866c8f476a34c43b13f232a54402b245b875",
                    operation="INSERT OR DELETE",
                    pgid="pgtrigger_add_del_item_collection_file_size_trigger_e1f24",
                    table="stac_api_item",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="item",
            trigger=pgtrigger.compiler.Trigger(
                name="update_item_collection_file_size_trigger",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.total_data_size IS DISTINCT FROM NEW.total_data_size)",
                    declare=
                    "DECLARE item_instance stac_api_item%ROWTYPE; updated_total_data_size NUMERIC;",
                    func=
                    "\n        item_instance = COALESCE(NEW, OLD);\n\n        -- Update related collection file_size variables\n        UPDATE stac_api_collection SET\n            total_data_size = total_data_size + COALESCE(NEW.total_data_size, 0) - COALESCE(OLD.total_data_size, 0)\n        WHERE id = item_instance.collection_id\n        RETURNING total_data_size INTO updated_total_data_size;\n\n        IF updated_total_data_size < 0\n            THEN RAISE WARNING 'item.id=% total_data_size has negative value %',\n            item_instance.collection_id, updated_total_data_size;\n        END IF;\n\n        RAISE INFO 'collection.id=% total_data_size updated, due to item.name=% updates.',\n            item_instance.collection_id, item_instance.name;\n\n        RETURN item_instance;\n        ",
                    hash="a6a85d349f27d95fff6ce7e58668f317a0976860",
                    operation="UPDATE",
                    pgid="pgtrigger_update_item_collection_file_size_trigger_83572",
                    table="stac_api_item",
                    when="AFTER",
                ),
            ),
        ),
    ]
