version: 1
disable_existing_loggers: False # this allow to get logger at module level

root:
  handlers:
    - console
    - file-standard
    - file-json
  level: DEBUG
  propagate: True

loggers:
  stac_api:
    level: DEBUG
  middleware:
    level: DEBUG
  rest_framework:
    level: DEBUG
  django.db:
    level: DEBUG
  django:
    level: DEBUG
  django.utils.autoreload:
    level: INFO
  gunicorn.error:
    handlers:
      - console
  gunicorn.access:
    handlers:
      - console

filters:
  isotime:
    (): logging_utilities.filters.TimeAttribute
    isotime: False
    utc_isotime: True
  django:
    (): logging_utilities.filters.django_request.JsonDjangoRequest
    include_keys:
      - request.path
      - request.method
      - request.headers
      - request.META
    exclude_keys:
      - request.headers.Authorization
      - request.headers.Proxy-Authorization
      - request.headers.Cookie
  console_django_filter_info:
    (): logging_utilities.filters.LevelFilter
    level: "INFO"
    logger: django

formatters:
  standard:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(utc_isotime)s] %(levelname)-8s - %(name)-26s : %(message)s"
    # extra_fmt: " - duration: %(duration)s"
    # extra_pretty_print: True
  standard-file:
    (): logging_utilities.formatters.extra_formatter.ExtraFormatter
    format: "[%(utc_isotime)s] %(levelname)-8s - %(name)-26s : %(message)s"
    extra_fmt: " - extra:\n%s"
    extra_pretty_print: True
  json:
    (): logging_utilities.formatters.json_formatter.JsonFormatter
    add_always_extra: False
    filter_attributes:
      - utc_isotime
    remove_empty: True
    fmt:
      time: utc_isotime
      level: levelname
      logger: name
      module: module
      function: funcName
      process: "%(process)x/%(thread)x"
      exc_info: exc_info
      request:
        id: request.headers.X-Amz-Cf-Id
        path: request.path
        method: request.method
        queryString: request.META.QUERY_STRING
        headers:
          Content-Type: request.headers.Content-Type
          Content-Length: request.headers.Content-Length
          Cloudfront-Forwarded-Proto: request.headers.Cloudfront-Forwarded-Proto
          Content-Encoding: request.headers.Content-Encoding
          Origin: request.headers.Origin
          Referer: request.headers.Referer
          Accept: request.headers.Accept
          Accept-Encoding: request.headers.Accept-Encoding
          Accept-Language: request.headers.Accept-Language
          User-Agent: request.headers.User-Agent
          If-None-Match: request.headers.If-None-Match
          Sec-Fetch-Mode: request.headers.Sec-Fetch-Mode
          Sec-Fetch-Site: request.headers.Sec-Fetch-Site
          Sec-CH-UA: request.headers.Sec-CH-UA
          Sec-CH-UA-Mobile: request.headers.Sec-CH-UA-Mobile
          Sec-CH-UA-Platform: request.headers.Sec-CH-UA-Platform
          Sec-CH-UA-Model: request.headers.Sec-CH-UA-Model
        payload: request.payload
      response:
        statusCode: response.code
        headers:
          Cache-Control: response.headers.Cache-Control
          Expires: response.headers.Expires
          Content-Type: response.headers.Content-Type
          Content-Length: response.headers.Content-Length
          Content-Encoding: response.headers.Content-Encoding
          Access-Control-Allow-Headers: response.headers.Access-Control-Allow-Headers
          Access-Control-Allow-Methods: response.headers.Access-Control-Allow-Methods
          Access-Control-Allow-Origin: response.headers.Access-Control-Allow-Origin
          ETag: response.headers.ETag
        duration: response.duration
        payload: response.payload
      message: message

handlers:
  console:
    class: logging.StreamHandler
    formatter: standard
    stream: ext://sys.stdout
    filters:
      - isotime
      - django
      - console_django_filter_info
  file-standard:
    level: DEBUG
    class: logging.FileHandler
    formatter: standard-file
    filename: ${BASE_DIR}/logs/server-standard-logs.txt
    mode: w
    filters:
      - isotime
      - django
  file-json:
    level: DEBUG
    class: logging.FileHandler
    formatter: json
    filename: ${BASE_DIR}/logs/server-json-logs.json
    mode: w
    filters:
      - isotime
      - django

