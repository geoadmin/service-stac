openapi: 3.0.1
components:
  schemas:
    assetQuery:
     additionalProperties:
       $ref: "#/components/schemas/assetQueryProp"
     description: >-
       Define which properties of the asset to query and the operations to apply.


       The following properties can be queried:

       - `type`: query for assets with this specific media type

       - `proj:epsg`: query for assets with this specific epsg

       - `eo:gsd`: query for assets with this specific gsd

       - `geoadmin:variant`: query for assets with this specific variant
     example:
       type:
         eq: image/tiff
     type: object
    assetQueryFilter:
     description: Allows users to query asset properties for specific values
     properties:
       assetQuery:
         $ref: "#/components/schemas/assetQuery"
     type: object
    assetQueryProp:
     anyOf:
       - description: >-
           If the object doesn't contain any of the operators, it is equivalent to using the
           equals operator
       - description: Match using an operator
         properties:
           contains:
             description: >-
               Find items with a property that contains the specified
               literal string, e.g., matches ".*<STRING>.*".
               A case-insensitive comparison must be performed.
             type: string
           endsWith:
             description: >-
               Find items with a property that ends with the specified string. A case-insensitive
               comparison must be performed.
             type: string
           eq:
             description: >-
               Find items with a property that is equal to the specified value. For strings, a
               case-insensitive comparison must be performed.
             nullable: true
             oneOf:
               - type: string
               - type: number
               - type: boolean
           in:
             description: >-
               Find items with a property that equals at least one entry in the specified array.
               A case-insensitive comparison must be performed.
             items:
               oneOf:
                 - type: string
                 - type: number
             type: array
           startsWith:
             description: >-
               Find items with a property that begins with the specified string. A case-insensitive
               comparison must be performed.
             type: string
         type: object
     description: Apply query operations to a specific property
    assetBase:
      title: Asset
      description: The `property name` defines the ID of the Asset.
      type: object
      required:
        - type
        - created
        - updated
      properties:
        title:
          $ref: "#/components/schemas/title"
        description:
          $ref: "#/components/schemas/description"
        type:
          $ref: "#/components/schemas/type"
        href:
          $ref: "#/components/schemas/href"
        checksum:multihash:
          $ref: "#/components/schemas/checksumMultihashReadOnly"
        # roles:
        #   $ref: '#/components/schemas/roles'
        "geoadmin:variant":
          $ref: "#/components/schemas/geoadminVariant"
        "geoadmin:lang":
          $ref: "#/components/schemas/geoadminLang"
        "proj:epsg":
          $ref: "#/components/schemas/projEpsg"
        "eo:gsd":
          $ref: "#/components/schemas/eoGsd"
        created:
          $ref: "#/components/schemas/created"
        updated:
          $ref: "#/components/schemas/updated"
    bbox:
      description: |
        The bounding box is provided as four numbers:

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2

        The coordinate reference system of the values is WGS84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).

        For WGS84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).

        Example: The bounding box of Switzerland in
        WGS 84 (from 5.96°E to 10.49°E and from 45.82°N to 47.81°N) would be
        represented in JSON as `[5.96, 45.82, 10.49, 47.81]` and in a query as
        `bbox=5.96,45.82,10.49,47.81`."
      example:
        - 7.0906249
        - 45.9160584
        - 7.1035698
        - 45.925093
      items:
        type: number
      maxItems: 4
      minItems: 4
      type: array
      readOnly: true
    bboxfilter:
      description: >-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four numbers:


        * Lower left corner, coordinate axis 1

        * Lower left corner, coordinate axis 2

        * Upper right corner, coordinate axis 1

        * Upper right corner, coordinate axis 2


        The coordinate reference system of the values is WGS84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).


        For WGS84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).


        Example: The bounding box of Switzerland in
        WGS 84 (from 5.96°E to 10.49°E and from 45.82°N to 47.81°N) would be
        represented in JSON as `[5.96, 45.82, 10.49, 47.81]` and in a query as
        `bbox=5.96,45.82,10.49,47.81`."
      example:
        - 7.0906249
        - 45.9160584
        - 7.1035698
        - 45.925093
      items:
        type: number
      maxItems: 4
      minItems: 4
      type: array
      readOnly: false
    bboxFilter:
      properties:
        bbox:
          $ref: "#/components/schemas/bboxfilter"
    checksumMultihash:
      description: >-
        `sha2-256` checksum of the asset in [multihash](https://multiformats.io/multihash/)
        format.

      example: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC
      pattern: ^[a-f0-9]+$
      title: Multihash
      type: string
    checksumMultihashReadOnly:
      description: |
        `sha2-256` checksum of the asset in [multihash](https://multiformats.io/multihash/) format.

      example: 90e402107a7f2588a85362b9beea2a12d4514d45
      pattern: ^[a-f0-9]+$
      title: Multihash
      type: string
      readOnly: true
    created:
      description: RFC 3339 compliant datetime string, time when the object was created
      example: 2018-02-12T23:20:50Z
      type: string
      format: date-time
      readOnly: true
    collectionBase:
      properties:
        crs:
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          description: The list of coordinate reference systems supported by the service
          example:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          items:
            type: string
          type: array
          readOnly: true
        description:
          description: A description of the features in the collection
          example: >-
            Swiss Map Raster are a conversion of the map image into a digital form
            with no direct bearing on the individual map elements.


            The information is structured only in colour layers. Swiss Map Raster pixel
            maps are ideal for finding background information for a broad variety of
            screen applications, web and mobile applications and services, as well as
            for geographic information systems. They can also be used as basic maps
            for a variety of purposes (digital printing, plots, offset printing, etc.).
          type: string
        extent:
          $ref: "#/components/schemas/extent"
        id:
          description: Identifier of the collection used, for example, in URIs
          example: ch.swisstopo.pixelkarte-farbe-pk200.noscale
          type: string
        itemType:
          default: Feature
          description: >-
            Indicator about the type of the items in the collection (the default value is 'Feature').
          type: string
          readOnly: true
        license:
          $ref: "#/components/schemas/license"
        providers:
          $ref: "#/components/schemas/providers"
        stac_version:
          $ref: "#/components/schemas/stac_version"
        summaries:
          additionalProperties:
            oneOf:
              - items:
                  description: A value of any type.
                title: Set of values
                type: array
              - description: >-
                  By default, only ranges with a minimum and a maximum value can
                  be specified. Ranges can be specified for ordinal values only,
                  which means they need to have a rank order. Therefore, ranges
                  can only be specified for numbers and some special types of
                  strings. Examples: grades (A to F), dates or times.
                  Implementors are free to add other derived statistical values
                  to the object, for example `mean` or `stddev`.
                properties:
                  max:
                    anyOf:
                      - type: string
                      - type: number
                  min:
                    anyOf:
                      - type: string
                      - type: number
                required:
                  - min
                  - max
                title: Statistics
                type: object
          description: >-
            Summaries are either a unique set of all available values *or*
            statistics. Statistics by default only specify the range (minimum
            and maximum values), but can optionally be accompanied by additional
            statistical values. The range can specify the potential range of
            values, but it is recommended to be as precise as possible. The set
            of values must contain at least one element and it is strongly
            recommended to list all values. It is recommended to list as many
            properties as reasonable so that consumers get a full overview of
            the Collection. Properties that are covered by the Collection
            specification (e.g. `providers` and `license`) may not be repeated
            in the summaries.
          type: object
          readOnly: true
          example:
            eo:gsd:
              - 10
              - 20
            geoadmin:variant:
              - kgrel
              - komb
              - krel
            geoadmin:lang:
              - de
              - fr
            proj:epsg:
              - 2056
        title:
          description: Human readable title of the collection
          example: National Map 1:200'000
          type: string
        created:
          $ref: "#/components/schemas/created"
        updated:
          $ref: "#/components/schemas/updated"
      required:
        - id
        - stac_version
        - description
        - license
        - extent
        - created
        - updated
      type: object
    collection:
      allOf:
        - $ref: "#/components/schemas/collectionBase"
        - type: object
          required:
            - links
          properties:
            links:
              type: array
              items:
                $ref: "#/components/schemas/link"
              example:
                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale
                  rel: self
                - href: https://data.geo.admin.ch/api/stac/v0.9/
                  rel: root
                - href: https://data.geo.admin.ch/api/stac/v0.9
                  rel: parent
                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items
                  rel: items
                - href: https://www.swisstopo.admin.ch/en/home/meta/conditions/geodata/free-geodata.html
                  rel: license
                  title: Licence for the free geodata of the Federal Office of Topography swisstopo
                - href: https://www.geocat.ch/geonetwork/srv/eng/catalog.search#/metadata/4c8c7c58-61c7-4a61-8e7a-6ffb95d183df
                  rel: describedby
    collections:
      properties:
        collections:
          items:
            $ref: "#/components/schemas/collection"
          type: array
        links:
          items:
            $ref: "#/components/schemas/link"
          example:
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections
              rel: self
            - href: https://data.geo.admin.ch/api/stac/v0.9/
              rel: root
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections?cursor=10ab
              rel: next
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections?cursor=10cd
              rel: previous
      required:
        - links
        - collections
      type: object
    collectionsArray:
      description: >-
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched.
      items:
        type: string
      type: array
    collectionsFilter:
      description: Only returns the collections specified
      properties:
        collections:
          $ref: "#/components/schemas/collectionsArray"
      type: object
      example:
        collections:
        - ch.swisstopo.swisstlmregio
        - ch.bfe.energieschweiz
    confClasses:
      properties:
        conformsTo:
          items:
            type: string
          type: array
      required:
        - conformsTo
      type: object
    datetime:
      description: RFC 3339 compliant datetime string
      example: 2018-02-12T23:20:50Z
      type: string
      format: date-time
    datetimeQuery:
      description: >-
        Either a date-time or an interval, open or closed. Date and time expressions
        adhere to RFC 3339. Open intervals are expressed using double-dots.

        Examples:


        * A date-time: "2018-02-12T23:20:50Z"

        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"

        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"


        Only features that have a temporal property that intersects the value of
        `datetime` are selected.


        When used as URL query argument, the value must be correctly url-encoded.
      example: 2018-02-12T00:00:00Z/2018-03-18T12:31:12Z
      type: string
    datetimeFilter:
      properties:
        datetime:
          $ref: "#/components/schemas/datetimeQuery"
    description:
      description: >-
        Detailed multi-line description to fully explain the catalog or
        collection.


        [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich
        text representation.
      type: string
    eoGsd:
      description: >-
        GSD is the nominal Ground Sample Distance for the data, as measured in meters on the ground.


        There are many definitions of GSD. The value of this attribute should be related to the
        spatial resolution at the sensor, rather than the pixel size of images after ortho-rectification,
        pansharpening, or scaling. The GSD of a sensor can vary depending on off-nadir and
        wavelength, so it is at the discretion of the implementer to decide which value most
        accurately represents the GSD. For example, Landsat8 optical and short-wave IR bands are
        all 30 meters, but the panchromatic band is 15 meters. The eo:gsd should be 30 meters in
        this case because that is nominal spatial resolution at the sensor. The Planet PlanetScope
        Ortho Tile Product has an eo:gsd of 3.7 (or 4 if rounding), even though the pixel size of
        the images is 3.125. For example, one might choose for WorldView-2 the Multispectral 20°
        off-nadir value of 2.07 and for WorldView-3 the Multispectral 20° off-nadir value of 1.38.
      example: 2.5
      title: Ground Sample Distance
      type: number
    exception:
      description: >-
        Information about the exception: an error code plus an optional description.
      properties:
        code:
          type: integer
          example: 500
        description:
          anyOf:
            - type: string
            - type: array
              items:
                anyOf:
                  - type: string
                  - type: object
            - type: object
      required:
        - code
      type: object
    extent:
      description: >-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
      properties:
        spatial:
          description: The spatial extent of the features in the collection.
          properties:
            bbox:
              description: >-
                One or more bounding boxes that describe the spatial extent of the dataset.
                In the Core only a single bounding box is supported. Extensions may support
                additional areas. If multiple areas are provided, the union of the bounding
                boxes describes the spatial extent.
              items:
                description: >-
                  Each bounding box is provided as four or six numbers, depending on
                  whether the coordinate reference system includes a vertical axis
                  (height or depth):


                  * Lower left corner, coordinate axis 1

                  * Lower left corner, coordinate axis 2

                  * Upper right corner, coordinate axis 1

                  * Upper right corner, coordinate axis 2


                  The coordinate reference system of the values is WGS 84 longitude/latitude
                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84).


                  For WGS 84 longitude/latitude the values are in most cases the sequence of
                  minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                  However, in cases where the box spans the antimeridian the first value
                  (west-most box edge) is larger than the third value (east-most box edge).


                  If the vertical axis is included, the third and the sixth number are
                  the bottom and the top of the 3-dimensional bounding box.


                  If a feature has multiple spatial geometry properties, it is the decision of the
                  server whether only a single spatial geometry property is used to determine
                  the extent or all relevant geometries.
                example:
                  - 5.685114
                  - 45.534903
                  - 10.747775
                  - 47.982586
                items:
                  type: number
                maxItems: 6
                minItems: 4
                type: array
              minItems: 1
              type: array
          required:
            - bbox
          type: object
        temporal:
          description: The temporal extent of the features in the collection.
          properties:
            interval:
              description: >-
                One time interval that describe the temporal extent of the dataset.
              items:
                description: >-
                  Begin and end times of the time interval.
                example:
                  - "2019-01-01T00:00:00Z"
                  - "2019-01-02T00:00:00Z"
                items:
                  format: date-time
                  nullable: false
                  type: string
                maxItems: 2
                minItems: 2
                type: array
              minItems: 1
              maxItems: 1
              type: array
          required:
            - interval
          type: object
      required:
        - spatial
        - temporal
      type: object
      readOnly: true
    geoadminLang:
      enum:
        - de
        - it
        - fr
        - rm
        - en
      title: Product language
      type: string
    geoadminVariant:
      example: komb
      title: Product variants
      type: string
    href:
      type: string
      format: url
      description: Link to the asset object
      readOnly: true
      example: |
        http://data.geo.admin.ch/ch.swisstopo.swissimage/collections/cs/items/CS3-20160503_132130_04/thumb.png
    ids:
      description: >-
        Array of Item ids to return. All other filter parameters that further
        restrict the number of search results are ignored
      items:
        type: string
      type: array
    idsFilter:
      description: Only returns items that match the array of given ids
      properties:
        ids:
          $ref: "#/components/schemas/ids"
      type: object
      example:
        ids:
        - swisstlmregio-2019
        - swisstlmregio-2020
    intersectsFilter:
      description: Only returns items that intersect with the provided polygon.
      properties:
        intersects:
          oneOf:
          - $ref: "#/components/schemas/geoJsonPoint"
          - $ref: "#/components/schemas/geoJsonLineString"
          - $ref: "#/components/schemas/geoJsonPolygon"
          - $ref: "#/components/schemas/geoJsonMultiPoint"
          - $ref: "#/components/schemas/geoJsonMultiLineString"
          - $ref: "#/components/schemas/geoJsonMultiPolygon"
      type: object
      example:
        intersects:
          type: "Point"
          coordinates:
            - 7
            - 46
    itemBase:
      description: >-
        A GeoJSON Feature augmented with foreign members that contain values relevant to a
        STAC entity
      properties:
        assets:
          $ref: "#/components/schemas/itemAssets"
        bbox:
          $ref: "#/components/schemas/bbox"
        geometry:
          # Original schemas were defined here:
          # https://geojson.org/schema/Geometry.json
          $ref: "#/components/schemas/itemGeometry"
        properties:
          $ref: "#/components/schemas/itemProperties"
          readOnly: true
        stac_version:
          $ref: "#/components/schemas/stac_version"
          readOnly: true
        type:
          $ref: "#/components/schemas/itemType"
      required:
        - stac_version
        - type
        - geometry
        - bbox
        - properties
        - assets
      type: object
    item:
      allOf:
        - type: object
          required:
            - id
            - links
          properties:
            id:
              $ref: "#/components/schemas/itemId"
            links:
              items:
                $ref: "#/components/schemas/link"
              type: array
              example:
                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items/smr50-263-2016
                  rel: self
                - href: https://data.geo.admin.ch/api/stac/v0.9/
                  rel: root
                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale
                  rel: parent
                - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale
                  rel: collection
        - $ref: "#/components/schemas/itemBase"
    items:
      description: >-
        A FeatureCollection augmented with foreign members that contain values relevant
        to a STAC entity
      properties:
        features:
          items:
            $ref: "#/components/schemas/item"
          type: array
        links:
          items:
            $ref: "#/components/schemas/link"
          type: array
          example:
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items
              rel: self
            - href: https://data.geo.admin.ch/api/stac/v0.9/
              rel: root
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale
              rel: parent
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items?cursor=10ab
              rel: next
            - href: https://data.geo.admin.ch/api/stac/v0.9/collections/ch.swisstopo.pixelkarte-farbe-pk50.noscale/items?cursor=10acd
              rel: previous
        type:
          enum:
            - FeatureCollection
          type: string
      required:
        - features
        - type
      type: object
    itemAssets:
      title: Assets
      description: List of Assets attached to this feature.
      additionalProperties:
        $ref: "#/components/schemas/assetBase"
      type: object
      readOnly: true
      example:
        smr50-263-2016-2056-kgrs-2.5.tiff:
          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC
          created: "2020-07-14T12:30:00Z"
          eo:gsd: 2.5
          geoadmin:variant: kgrs
          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-kgrs-2.5.tiff
          proj:epsg: 2056
          type: image/tiff; application=geotiff
          updated: "2020-07-14T12:30:00Z"
        smr50-263-2016-2056-komb-2.5.tiff:
          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC
          created: "2020-07-14T12:30:00Z"
          eo:gsd: 2.5
          geoadmin:variant: komb
          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-komb-2.5.tiff
          proj:epsg: "2056"
          type: image/tiff; application=geotiff
          updated: "2020-07-14T12:30:00Z"
        smr50-263-2016-2056-krel-2.5.tiff:
          checksum:multihash: 12200ADEC47F803A8CF1055ED36750B3BA573C79A3AF7DA6D6F5A2AED03EA16AF3BC
          created: "2020-07-14T12:30:00Z"
          eo:gsd: 2.5
          geoadmin:variant: krel
          href: https://data.geo.admin.ch/ch.swisstopo.pixelkarte-farbe-pk50.noscale/smr50-263-2016-2056-krel-2.5.tiff
          proj:epsg: "2056"
          type: image/tiff; application=geotiff
          updated: "2020-07-14T12:30:00Z"
    itemsSearch:
      description: >-
        A GeoJSON FeatureCollection augmented with foreign members that contain values relevant
        to a STAC entity
      properties:
        features:
          items:
            $ref: "#/components/schemas/item"
          type: array
        type:
          enum:
            - FeatureCollection
          type: string
      required:
        - features
        - type
      type: object
    itemsSearchGet:
      allOf:
        - $ref: "#/components/schemas/itemsSearch"
        - type: object
          properties:
            links:
              $ref: "#/components/schemas/itemsSearchLinks"
    itemsSearchPost:
      allOf:
        - $ref: "#/components/schemas/itemsSearch"
        - type: object
          properties:
            links:
              $ref: "#/components/schemas/itemsSearchPostLinks"
    itemsSearchLinks:
      description: >-
        An array of links. Can be used for pagination, e.g. by providing a link with the `next`
        relation type.
      example:
        - href: https://data.geo.admin.ch/api/stac/v0.9/search
          rel: self
        - href: https://data.geo.admin.ch/api/stac/v0.9/search?cursor=10ab
          rel: next
      items:
        $ref: "#/components/schemas/link"
      type: array
    itemsSearchPostLinks:
      description: >-
        An array of links. Can be used for pagination, e.g. by providing a link with the `next`
        relation type.
      example:
        - href: https://data.geo.admin.ch/api/stac/v0.9/search
          rel: self
        - href: https://data.geo.admin.ch/api/stac/v0.9/search?cursor=10ab
          rel: next
          method: POST
          body: {}
          merge: true
      items:
        $ref: "#/components/schemas/linkPostSearch"
      type: array
    itemId:
      title: ID
      description: Feature identifier (unique per collection)
      example: smr200-200-4-2019
      type: string
    itemGeometry:
      # oneOf:
        # - $ref: "#/components/schemas/geoJsonPoint"
        # - $ref: "#/components/schemas/geoJsonLineString"
      $ref: "#/components/schemas/geoJsonPolygon"
        # - $ref: "#/components/schemas/geoJsonMultiPoint"
        # - $ref: "#/components/schemas/geoJsonMultiLineString"
        # - $ref: "#/components/schemas/geoJsonMultiPolygon"
    geoJsonPoint:
      title: GeoJSON Point
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          description: >-
            For type "Point", the "coordinates" member is a single position.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            [7.0906823, 45.9160584]
          type: array
          minItems: 2
          items:
            type: number
    geoJsonLineString:
      title: GeoJSON LineString
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          description: >-
            For type "LineString", the "coordinates" member is an array of two or
            more positions.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            - [
              [7.0906823, 45.9160584], [7.1035698, 45.9160977]
            ]
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
    geoJsonPolygon:
      title: GeoJSON Polygon
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          description: >-
            For type "Polygon", the "coordinates" member MUST be an array of
            linear ring coordinate arrays.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            [
              [
                [7.0906823, 45.9160584],
                [7.1035698, 45.9160977],
                [7.1035146, 45.925093],
                [7.0906249, 45.9250537],
                [7.0906823, 45.9160584]
              ]
            ]
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
    geoJsonMultiPoint:
      title: GeoJSON MultiPoint
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          description: >-
            For type "MultiPoint", the "coordinates" member is an array of
            positions.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            [
              [7.0906823, 45.9160584],
              [7.1035698, 45.9160977],
              [7.1035146, 45.925093]
            ]
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
    geoJsonMultiLineString:
      title: GeoJSON MultiLineString
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          description: >-
            For type "MultiLineString", the "coordinates" member is an array of
            LineString coordinate arrays.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            [
                [[7.0906823, 45.9160584], [7.1035698, 45.9160977]],
                [[7.1035146, 45.925093], [7.0906249, 45.9250537]]
            ]
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
    geoJsonMultiPolygon:
      title: GeoJSON MultiPolygon
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          description: >-
            For type "MultiPolygon", the "coordinates" member is an array of
            Polygon coordinate arrays.
            The coordinate reference system of the values is WGS84
            longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).
          example:
            [
              [
                [
                  [7.0906823, 45.9160584],
                  [7.1035698, 45.9160977],
                  [7.1035146, 45.925093],
                  [7.0906249, 45.9250537],
                  [7.0906823, 45.9160584]
                ]
              ],
              [
                [
                  [8.5816399, 45.7218735],
                  [8.5944806, 45.7217417],
                  [8.5946699, 45.7307358],
                  [8.581827, 45.7308676],
                  [8.5816399, 45.7218735]
                ]
              ]
            ]
          type: array
          items:
            type: array
            items:
              type:	array
              minItems:	4
              items:
                type:	array
                minItems:	2
                items:
                  type: number
    itemProperties:
      title: Properties
      description: >-
        Provides the core metadata fields plus extensions


        The item's data timing information can be specified either with

        * One datetime value in the field `datetime`

        * A datetime range with a `start_datetime` and an `end_datetime`


        One of the two is required
      properties:
        created:
          $ref: "#/components/schemas/created"
        datetime:
          $ref: "#/components/schemas/datetime"
        start_datetime:
          $ref: "#/components/schemas/datetime"
        end_datetime:
          $ref: "#/components/schemas/datetime"
        updated:
          $ref: "#/components/schemas/updated"
        title:
          description: Human readable title of the Feature
          example: Feature title
          type: string
      required:
        - created
        - updated
      type: object
    itemType:
      title: type
      description: The GeoJSON type
      enum:
        - Feature
      type: string
      readOnly: true
    landingPage:
      properties:
        description:
          example: >-
            Access to data about buildings in the city of Bonn via a Web API that conforms to
            the OGC API Features specification.
          type: string
        id:
          type: string
        links:
          items:
            $ref: "#/components/schemas/link"
          type: array
        stac_version:
          $ref: "#/components/schemas/stac_version"
        title:
          example: Buildings in Bonn
          type: string
      required:
        - links
        - stac_version
        - id
        - description
      type: object
    license:
      description: >-
        License(s) of the data as a SPDX
        [License identifier](https://spdx.org/licenses/). Alternatively, use
        `proprietary` if the license is not on the SPDX license list or
        `various` if multiple licenses apply. In these two cases links to the
        license texts SHOULD be added, see the `license` link relation type.


        Non-SPDX licenses SHOULD add a link to the license text with the
        `license` relation in the links section. The license text MUST NOT be
        provided as a value of this field. If there is no public license URL
        available, it is RECOMMENDED to host the license text and
        link to it.
      example: proprietary
      type: string
    limit:
      default: 100
      description: >-
        The `limit` parameter limits the number of results that are included
        in the response.


        To retrieve the next bunch of result, use the `next` link in the `links`
        section of the response.


        Minimum = 1. Maximum = 100. Default = 100.
      example: 20
      maximum: 100
      minimum: 1
      type: integer
    limitFilter:
      description: Only returns maximum number of results (page size)
      properties:
        limit:
          $ref: "#/components/schemas/limit"
      type: object
    linestringGeoJSON:
      properties:
        coordinates:
          items:
            items:
              type: number
            minItems: 2
            type: array
          minItems: 2
          type: array
        type:
          enum:
            - LineString
          type: string
      required:
        - type
        - coordinates
      type: object
    link:
      properties:
        href:
          example: http://data.example.com/buildings/123
          format: url
          type: string
        rel:
          description: >-
            Relationship between the current document and the linked document.


            NOTE: the following relations are reserved and automatically generated:
            `self`, `root`, `parent`, `items`, `collection`, `next`, `previous`
          example: describedby
          type: string
        title:
          example: Trierer Strasse 70, 53115 Bonn
          type: string
        type:
          description: The media type of the link target
          example: application/geo+json
          type: string
        method:
          default: GET
          description: Specifies the HTTP method that the link expects
          enum:
            - GET
            - POST
          type: string
      required:
        - href
        - rel
      title: Link
      type: object
    linkPostSearch:
      allOf:
        - $ref: "#/components/schemas/link"
        - type: object
          properties:
            body:
              default: {}
              description: For `POST /search` requests, the link can specify the HTTP body as a JSON object.
              type: object
            merge:
              default: false
              description: >-
                This is only valid when the server is responding to `POST /search `request.


                If merge is true, the client is expected to merge the body value
                into the current request body before following the link.
                This avoids passing large post bodies back and forth when following
                links, particularly for navigating pages through the `POST /search`
                endpoint.
              type: boolean
    multilinestringGeoJSON:
      properties:
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 2
            type: array
          type: array
        type:
          enum:
            - MultiLineString
          type: string
      required:
        - type
        - coordinates
      type: object
    multipointGeoJSON:
      properties:
        coordinates:
          items:
            items:
              type: number
            minItems: 2
            type: array
          type: array
        type:
          enum:
            - MultiPoint
          type: string
      required:
        - type
        - coordinates
      type: object
    multipolygonGeoJSON:
      properties:
        coordinates:
          items:
            items:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 4
              type: array
            type: array
          type: array
        type:
          enum:
            - MultiPolygon
          type: string
      required:
        - type
        - coordinates
      type: object
    numberMatched:
      description: >-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      example: 127
      minimum: 0
      type: integer
    numberReturned:
      description: >-
        The number of features in the feature collection.


        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.


        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      example: 10
      minimum: 0
      type: integer
    pointGeoJSON:
      properties:
        coordinates:
          items:
            type: number
          minItems: 2
          type: array
        type:
          enum:
            - Point
          type: string
      required:
        - type
        - coordinates
      type: object
    polygonGeoJSON:
      properties:
        coordinates:
          items:
            items:
              items:
                type: number
              minItems: 2
              type: array
            minItems: 4
            type: array
          type: array
        type:
          enum:
            - Polygon
          type: string
      required:
        - type
        - coordinates
      type: object
      example:
        coordinates:
          - - - 7.242974548172171
              - 46.57310580640624
            - - 7.243756483316452
              - 46.35721185723752
            - - 7.698490766144817
              - 46.357085154660915
            - - 7.699524647567326
              - 46.57297861624267
            - - 7.242974548172171
              - 46.57310580640624
        type: Polygon
    projEpsg:
      description: >-
        A Coordinate Reference System (CRS) is the data reference system
        (sometimes called a 'projection') used by the asset data, and can
        usually be referenced using an EPSG code. If the asset data does not have a
        CRS, such as in the case of non-rectified imagery with Ground Control Points,
        proj:epsg should be set to null. It should also be set to null if a CRS exists,
        but for which there is no valid EPSG code.

      example: 2056
      title: EPSG code.
      type: integer
    providers:
      description: >-
        A list of providers, which may include all organizations capturing or processing the data
        or the hosting provider. Providers should be listed in chronological order with the most
        recent provider being the last element of the list.
      items:
        properties:
          description:
            description: >-
              Multi-line description to add further provider information such as processing details
              for processors and producers, hosting details for hosts or basic contact information.


              CommonMark 0.29 syntax MAY be used for rich text representation.
            type: string
          name:
            description: The name of the organization or the individual.
            type: string
          roles:
            description: >-
              Roles of the provider.


              The provider's role(s) can be one or more of the following
              elements:


              * licensor: The organization that is licensing the dataset under
                the license specified in the collection's license field.

              * producer: The producer of the data is the provider that
                initially captured and processed the source data, e.g. ESA for
                Sentinel-2 data.

              * processor: A processor is any provider who processed data to a
                derived product.

              * host: The host is the actual provider offering the data on their
                storage. There should be no more than one host, specified as last
                element of the list.
            items:
              enum:
                - producer
                - licensor
                - processor
                - host
              type: string
            type: array
          url:
            description: >-
              Homepage on which the provider describes the dataset and publishes contact information.
            format: url
            type: string
        required:
          - name
        title: Provider
        type: object
      type: array
      example:
        - name: Federal Office of Topography - swisstopo
          roles:
            - producer
            - licensor
          url: https://www.swisstopo.admin.ch
    query:
      additionalProperties:
        $ref: "#/components/schemas/queryProp"
      description: Define which properties to query and the operations to apply
      example:
        title:
          eq: "Swissregio"
        title:
          contains: "Swiss"
        created:
          lte: "2021-01-01T00:00:00.000Z"
        updated:
          gte: "2020-01-01T00:00:00.000Z"
      type: object
    queryFilter:
      description: Allows users to query properties for specific values
      properties:
        query:
          $ref: "#/components/schemas/query"
      type: object
    queryProp:
      anyOf:
        - description: >-
            If the object doesn't contain any of the operators, it is equivalent to using the
            equals operator
        - description: Match using an operator
          properties:
            contains:
              description: >-
                Find items with a property that contains the specified literal string, e.g., matches
                ".*<STRING>.*". A case-insensitive comparison must be performed.
              type: string
            endsWith:
              description: >-
                Find items with a property that ends with the specified string. A case-insensitive
                comparison must be performed.
              type: string
            eq:
              description: >-
                Find items with a property that is equal to the specified value. For strings, a
                case-insensitive comparison must be performed.
              nullable: true
              oneOf:
                - type: string
                - type: number
                - type: boolean
            gt:
              description: Find items with a property value greater than the specified value.
              oneOf:
                - format: date-time
                  type: string
                - type: number
            gte:
              description: Find items with a property value greater than or equal the specified value.
              oneOf:
                - format: date-time
                  type: string
                - type: number
            in:
              description: >-
                Find items with a property that equals at least one entry in the specified array.
                A case-insensitive comparison must be performed.
              items:
                oneOf:
                  - type: string
                  - type: number
              type: array
            lt:
              description: Find items with a property value less than the specified value.
              oneOf:
                - format: date-time
                  type: string
                - type: number
            lte:
              description: Find items with a property value less than or equal the specified value.
              oneOf:
                - format: date-time
                  type: string
                - type: number
            neq:
              description: >-
                Find items that *don't* contain the specified value. For strings, a case-insensitive
                comparison must be performed.
              nullable: true
              oneOf:
                - type: string
                - type: number
                - type: boolean
            startsWith:
              description: >-
                Find items with a property that begins with the specified string. A case-insensitive
                comparison must be performed.
              type: string
          type: object
      description: >-
        Apply query operations to a specific property. The following properties
        are currently supported: `created`, `updated`, `title`.
    roles:
      type: array
      items:
        type: string
      description: Purposes of the asset
      example:
        - thumbnail
    searchBody:
      allOf:
        #        - $ref: "#/components/schemas/assetQueryFilter"
        - $ref: "#/components/schemas/queryFilter"
        - $ref: "#/components/schemas/bboxFilter"
        - $ref: "#/components/schemas/datetimeFilter"
        - $ref: "#/components/schemas/intersectsFilter"
        - $ref: "#/components/schemas/collectionsFilter"
        - $ref: "#/components/schemas/idsFilter"
        - $ref: "#/components/schemas/limitFilter"
      description: The search criteria
      type: object
    stac_version:
      example: 0.9.0
      title: STAC version
      type: string
      readOnly: true
    timeStamp:
      description: This property indicates the time and date when the response was generated.
      example: "2017-08-17T08:05:32Z"
      format: date-time
      type: string
    title:
      type: string
      description: Displayed title
      example: Thumbnail
    type:
      type: string
      description: Media type of the asset
      example: image/tiff; application=geotiff
    updated:
      description: RFC 3339 compliant datetime string, time when the object was updated
      example: 2018-02-12T23:20:50Z
      type: string
      format: date-time
      readOnly: true
