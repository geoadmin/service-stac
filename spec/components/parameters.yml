components:
  parameters:
    assetQuery:
      description: query for properties in assets (e.g. mediatype). Use the JSON form of the assetQueryFilter used in POST.
      in: query
      name: assetQuery
      required: false
      schema:
        type: string
    bbox:
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on whether the
        coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84 longitude/latitude
        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
        reference system is specified in the parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
        minimum longitude, minimum latitude, maximum longitude and maximum latitude.
        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
        server whether only a single spatial geometry property is used to determine
        the extent or all relevant geometries.
      explode: false
      in: query
      name: bbox
      required: false
      schema:
        items:
          type: number
        maxItems: 6
        minItems: 4
        type: array
      style: form
    collectionId:
      description: local identifier of a collection
      in: path
      name: collectionId
      required: true
      schema:
        type: string
    collectionsArray:
      description: |
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched
      explode: false
      in: query
      name: collections
      required: false
      schema:
        $ref: '#/components/schemas/collectionsArray'
    datetime:
      description: |-
        Either a date-time or an interval, open or closed. Date and time expressions
        adhere to RFC 3339. Open intervals are expressed using double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      explode: false
      in: query
      name: datetime
      required: false
      schema:
        type: string
      style: form
    featureId:
      description: local identifier of a feature
      in: path
      name: featureId
      required: true
      schema:
        type: string
    ids:
      description: |-
        Array of Item ids to return. All other filter parameters that further
        restrict the number of search results are ignored
      explode: false
      in: query
      name: ids
      required: false
      schema:
        $ref: '#/components/schemas/ids'
    limit:
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.

        Only items are counted that are on the first level of the collection in the response document.
        Nested objects contained within the explicitly requested items shall not be counted.

        Minimum = 1. Maximum = 10000. Default = 10.
      explode: false
      in: query
      name: limit
      required: false
      schema:
        default: 10
        maximum: 10000
        minimum: 1
        type: integer
      style: form
    query:
      description: query for properties in items. Use the JSON form of the queryFilter used in POST.
      in: query
      name: query
      required: false
      schema:
        type: string