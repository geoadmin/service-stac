paths:
  /:
    get:
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the feature collections in this dataset.
      operationId: getLandingPage
      responses:
        "200":
          $ref: '#/components/responses/LandingPage'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: landing page
      tags:
      - Capabilities
  /collections:
    get:
      operationId: getCollections
      responses:
        "200":
          $ref: '#/components/responses/Collections'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: the feature collections in the dataset
      tags:
      - Data
  /collections/{collectionId}:
    get:
      operationId: describeCollection
      parameters:
      - $ref: '#/components/parameters/collectionId'
      responses:
        "200":
          $ref: '#/components/responses/Collection'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: describe the feature collection with id `collectionId`
      tags:
      - Data
  /collections/{collectionId}/items:
    get:
      description: |-
        Fetch features of the feature collection with id `collectionId`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getFeatures
      parameters:
      - $ref: '#/components/parameters/collectionId'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/datetime'
      responses:
        "200":
          $ref: '#/components/responses/Features'
        "400":
          $ref: '#/components/responses/InvalidParameter'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: fetch features
      tags:
      - Data
  /collections/{collectionId}/items/{featureId}:
    get:
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `collectionId`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getFeature
      parameters:
      - $ref: '#/components/parameters/collectionId'
      - $ref: '#/components/parameters/featureId'
      responses:
        "200":
          $ref: '#/components/responses/Feature'
        "404":
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: fetch a single feature
      tags:
      - Data
  /conformance:
    get:
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      responses:
        "200":
          $ref: '#/components/responses/ConformanceDeclaration'
        "500":
          $ref: '#/components/responses/ServerError'
      summary: information about specifications that this API conforms to
      tags:
      - Capabilities
  /search:
    get:
      description: |-
        Retrieve Items matching filters. Intended as a shorthand API for simple
        queries.

        This method is optional, but you MUST implement `POST /search` if you
        want to implement this method.

        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` to the
        `links` array in `GET /`. As `GET` is the default method, the `method`
        may not be set explicitly in the link.
      operationId: getSearchSTAC
      parameters:
      - $ref: '#/components/parameters/assetQuery'
      - $ref: '#/components/parameters/query'
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/datetime'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/ids'
      - $ref: '#/components/parameters/collectionsArray'
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/itemCollection'
            text/html:
              schema:
                type: string
          description: A feature collection.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occurred.
      summary: Search STAC items with simple filtering.
      tags:
      - STAC
    post:
      description: |-
        retrieve items matching filters. Intended as the standard, full-featured
        query API.

        This method is mandatory to implement if `GET /search` is implemented.
        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` and `method`
        set to `POST` to the `links` array in `GET /`.
      operationId: postSearchSTAC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchBody'
      responses:
        "200":
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/itemCollection'
            text/html:
              schema:
                type: string
          description: A feature collection.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
          description: An error occurred.
      summary: Search STAC items with full-featured filtering.
      tags:
      - STAC